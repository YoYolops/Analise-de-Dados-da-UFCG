<<<<<<< HEAD
ggplot(data = Final.Total,
mapping = aes(x = `Total Vagas`,
y = reorder(Curso, -`Total Vagas`))) +
geom_col() +
xlab("Vagas") +
ylab("Curso") +
ggtitle("Vagas Disponíveis Anualmente Para Ingressantes por Curso - UFCG")
##########################
ggplot(data = Final.Total,
mapping = aes(x = `Vagas Ociosas`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#08b5ff", mapping = aes(x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`)), stat = "identity") +
geom_bar(fill = "#00628c", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################
ggplot(fill = "#00628c", data = Final.Total,
mapping = aes(fill= `Vagas Ociosas`, x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#08b5ff", position="stack", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################00628c
ggplot(fill = "#08b5ff", data = Final.Total,
mapping = aes(fill= `Vagas Ociosas`, x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#08b5ff", position="stack", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################00628c
ggplot(fill = "#00628c", data = Final.Total,
mapping = aes(fill= `Vagas Ociosas`, x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#00628c", position="stack", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
08b5ff
##########################00628c
ggplot(fill = "#00628c", data = Final.Total,
mapping = aes(fill= `Vagas Ociosas`, x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#08b5ff", position="stack", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################08b5ff
ggplot(fill = "#00628c", data = Final.Total,
mapping = aes(fill= `Vagas Ociosas`, x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#00628c", position="stack", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################08b5ff
ggplot(fill = "#08b5ff", data = Final.Total,
mapping = aes(fill= `Vagas Ociosas`, x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#00628c", position="stack", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################08b5ff
ggplot(fill = "#08b5ff", data = Final.Total,
mapping = aes(fill= `Vagas Ociosas`, x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#00628c", position="stack", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################08b5ff
ggplot(data = Final.Total,
mapping = aes(fill= `Vagas Ociosas`, x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#00628c", position="stack", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################08b5ff
ggplot(data = Final.Total,
mapping = aes(fill= `Vagas Ociosas`, x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#00628c", position="fill", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################08b5ff
ggplot(fill = "#08b5ff", data = Final.Total,
mapping = aes(fill= `Vagas Ociosas`, x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#00628c", position="fill", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################08b5ff
ggplot(fill = "#08b5ff", data = Final.Total,
mapping = aes(fill= `Vagas Ociosas`, x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_col(fill = "#00628c", position="fill", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################08b5ff
ggplot(fill = "#08b5ff", data = Final.Total,
mapping = aes(fill= `Vagas Ociosas`, x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#00628c", position="fill", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################
ggplot(data = Final.Total,
mapping = aes(x = `Vagas Ociosas`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#08b5ff", mapping = aes(x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`)), stat = "identity") +
geom_bar(fill = "#00628c", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################
ggplot(data = Final.Total,
mapping = aes(x = `Vagas Ociosas`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#08b5ff", stat = "identity") +
geom_bar(fill = "#00628c", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################
ggplot(data = Final.Total,
mapping = aes(x = `Vagas Ociosas`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#08b5ff", stat = "identity") +
geom_bar(fill = "#00628c", mapping = aes(x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`)), stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################
ggplot(data = Final.Total,
mapping = aes(x = `Vagas Ociosas`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#08b5ff", mapping = aes(x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`)), stat = "identity") +
geom_bar(fill = "#00628c", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################
ggplot(data = Final.Total,
mapping = aes(x = `Vagas Ociosas`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#08b5ff", mapping = aes(x = `Alunos Ativos`,
y = `Curso`), stat = "identity") +
geom_bar(fill = "#00628c", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################
ggplot(data = Final.Total,
mapping = aes(x = `Vagas Ociosas`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#08b5ff", mapping = aes(x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`)), stat = "identity") +
geom_bar(fill = "#00628c", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
#Criando agrupamentos por Turno
Turnos <- data.test2
total_vagas <- Turnos %>%
group_by(Turno) %>%
summarise(`Vagas Totais` = sum(`Vaga 1 Sem`, `Vaga 2 Sem`))
total_vagas <- as.data.frame(total_vagas)
alunos_ativos <- Turnos %>%
group_by(Turno) %>%
summarise(`Alunos Ativos` = sum(`Alunos Ativos`))
alunos_ativos <- as.data.frame(alunos_ativos)
vagas_ociosas <- Turnos %>%
group_by(Turno) %>%
summarise(`Vagas Ociosas` = sum(`Vagas Ociosas`))
vagas_ociosas <- as.data.frame(vagas_ociosas)
#Juntando fragmentos criados
Turnos2 <- inner_join(total_vagas, alunos_ativos, by = "Turno")
Turnos2 <- inner_join(Turnos2, vagas_ociosas, by = "Turno")
View(Turnos2)
#Renomeando Turnos
Turnos2[1:5,1] <- c("Diurno", "Integral", "Matutino", "Noturno", "Vespertino")
#Plotando gráficos Turnos2
ggplot(data = Turnos2,
mapping = aes(x = reorder(Turno, -`Alunos Ativos`),
y = `Alunos Ativos`)) +
xlab("Turnos") +
ylab("Alunos Ativos") +
geom_col(fill = "darkblue") +
ggtitle("Alunos Ativos por Turnos - UFCG")
###########
ggplot(data = Turnos2,
mapping = aes(x = reorder(Turno, -`Vagas Totais`),
y = `Vagas Totais`)) +
xlab("Turnos") +
ylab("Vagas 1º Semestre") +
geom_col(fill = "darkblue") +
ggtitle("Vagas Totais Para Ingressantes por Turno - UFCG")
################
ggplot(data = Turnos2,
mapping = aes(x = reorder(Turno, -`Vagas 2º Sem`),
y = `Vagas 2º Sem`)) +
xlab("Turnos") +
ylab("Vagas 2º Semestre") +
geom_col(fill = "darkblue") +
ggtitle("Vagas Para Ingressantes 2º Semestre por Turno - UFCG")
View(Turnos)
#############
ggplot(data = Turnos2,
mapping = aes(x = reorder(Turno, -`Vagas Ociosas`),
y = `Vagas Ociosas`)) +
xlab("Turnos") +
ylab("Vagas Ociosas") +
geom_col(fill = "darkblue") +
ggtitle("Vagas Ociosas por Turno - UFCG")
=======
data.edit1$`Alunos Ativos`
View(data.edit1)
View(vagasOciosasPorCurso)
data.edit1$`Alunos Ativos` <- as.numeric(data.edit1$`Alunos Ativos`)
#Criando DF para manipulação, deixando o original como Backup
data.edit1 <- vagasOciosasPorCurso
#Excluindo colunas inúteis e Convertendo strings para numéricos
data.edit1$Código <- NULL
data.edit1$`Duração Padrão` <- NULL
data.edit1$Área <- NULL
data.edit1$`Fator de Retenção` <- NULL
levels(data.edit1$`Alunos Ativos`)
data.edit1$`Alunos Ativos` <- as.numeric(levels(data.edit1$`Alunos Ativos`))
data.edit1$`Alunos Ativos` <- as.numeric(levels(data.edit1$`Alunos Ativos`))[data.edit1$`Alunos Ativos`]
class(data.edit1$`Alunos Ativos`)
vagasOciosasPorCurso <- read.csv(file = 'vagasOciosasPorCurso.csv')
View(vagasOciosasPorCurso)
str(vagasOciosasPorCurso)
View(vagasOciosasPorCurso)
#Correção dos Títulos das Colunas:
names(vagasOciosasPorCurso)[1:10] <- c("Código","Curso","Campus","Alunos Ativos","Vaga 1 Sem","Vaga 2 Sem","Área","Duração Padrão","Fator de Retenção","Vagas Ociosas")
#Criando DF para manipulação, deixando o original como Backup
data.edit1 <- vagasOciosasPorCurso
View(data.edit1)
#Excluindo colunas inúteis e Convertendo strings para numéricos
data.edit1$Código <- NULL
data.edit1$`Duração Padrão` <- NULL
data.edit1$Área <- NULL
data.edit1$`Fator de Retenção` <- NULL
data.edit1$`Alunos Ativos` <- as.numeric(data.edit1$`Alunos Ativos`)
vagasOciosasPorCurso <- read.csv(file = 'vagasOciosasPorCurso.csv')
View(vagasOciosasPorCurso)
str(vagasOciosasPorCurso)
#Correção dos Títulos das Colunas:
names(vagasOciosasPorCurso)[1:10] <- c("Código","Curso","Campus","Alunos Ativos","Vaga 1 Sem","Vaga 2 Sem","Área","Duração Padrão","Fator de Retenção","Vagas Ociosas")
#Criando DF para manipulação, deixando o original como Backup
data.edit1 <- vagasOciosasPorCurso
#Excluindo colunas inúteis e Convertendo strings para numéricos
data.edit1$Código <- NULL
data.edit1$`Duração Padrão` <- NULL
data.edit1$Área <- NULL
data.edit1$`Fator de Retenção` <- NULL
data.edit1$`Alunos Ativos` <- as.numeric(levels(data.edit1$`Alunos Ativos`))[data.edit1$`Alunos Ativos`]
data.edit1$`Vaga 1 Sem` <- as.numeric(data.edit1$`Vaga 1 Sem`)
data.edit1$`Vaga 2 Sem` <- as.numeric(data.edit1$`Vaga 2 Sem`)
data.edit1$`Fator de Retenção` <- as.numeric(data.edit1$`Fator de Retenção`)
#data.edit1$`Fator de Retenção` <- as.numeric(data.edit1$`Fator de Retenção`)
data.edit1$`Vagas Ociosas` <- as.numeric(data.edit1$`Vagas Ociosas`)
#Fundindo Linhas:
data.edit2 <- data.edit1[c(-1,-47,-95,-2),] #excluindo linhas vazias
data.edit2$Campus <- as.factor(data.edit2$Campus)
class(data.edit2$Curso)
data.test <- data.edit2
#Tratando Strings:
levels(data.test$Turno)
View(data.test)
data.edit2$Campus <- as.factor(data.edit2$Campus)
separate(data.edit2, Curso, sep = "-", into = c("Curso", "Turno")) #não funciona, pesquisar dps
separate(data.edit2, Curso, sep = "-", into = c("Curso", "Turno")) #não funciona, pesquisar dps
View(data.edit2)
View(data.edit1)
#TESTES:
#Tratando Strings:
levels(data.test$Turno)
data.test$Turno <- str_extract(data.test$Curso, "\\- [:upper:]") #extrair de turnos e salvar em cursos "- (letramaius)"
data.test$Turno <- str_sub(data.test$Curso, start = -1) #Pegar apenas o último caractere
vagasOciosasPorCurso <- read.csv(file = 'vagasOciosasPorCurso.csv')
View(vagasOciosasPorCurso)
str(vagasOciosasPorCurso)
#Correção dos Títulos das Colunas:
names(vagasOciosasPorCurso)[1:10] <- c("Código","Curso","Campus","Alunos Ativos","Vaga 1 Sem","Vaga 2 Sem","Área","Duração Padrão","Fator de Retenção","Vagas Ociosas")
#Criando DF para manipulação, deixando o original como Backup
data.edit1 <- vagasOciosasPorCurso
#Excluindo colunas inúteis e Convertendo strings para numéricos
data.edit1$Código <- NULL
data.edit1$`Duração Padrão` <- NULL
data.edit1$Área <- NULL
data.edit1$`Fator de Retenção` <- NULL
data.edit1$`Alunos Ativos` <- as.numeric(levels(data.edit1$`Alunos Ativos`))[data.edit1$`Alunos Ativos`]
data.edit1$`Vaga 1 Sem` <- as.numeric(data.edit1$`Vaga 1 Sem`)
data.edit1$`Vaga 2 Sem` <- as.numeric(data.edit1$`Vaga 2 Sem`)
data.edit1$`Vagas Ociosas` <- as.numeric(data.edit1$`Vagas Ociosas`)
#Fundindo Linhas:
data.edit2 <- data.edit1[c(-1,-47,-95,-2),] #excluindo linhas vazias
data.edit2$Campus <- as.factor(data.edit2$Campus)
separate(data.edit2, Curso, sep = "-", into = c("Curso", "Turno")) #não funciona, pesquisar dps
class(data.edit2$Curso)
data.test <- data.edit2
data.test$Turno <- str_extract(data.test$Curso, str_sub(data.test$Curso, start = -1)) #extrair de turnos e salvar em cursos "- (letramaius)"
data.test$Turno <- str_extract(data.test$Curso, "\\- [:upper:]") #extrair de turnos e salvar em cursos "- (letramaius)"
data.test$Turno <- str_sub(data.test$Curso, start = -1) #Pegar apenas o último caractere
data.test$Curso <- str_sub(data.test$Curso, end = -4 ) #Pegar apenas do quarto caractere pra tras
vagasOciosasPorCurso <- read.csv(file = 'vagasOciosasPorCurso.csv')
View(vagasOciosasPorCurso)
str(vagasOciosasPorCurso)
#Correção dos Títulos das Colunas:
names(vagasOciosasPorCurso)[1:10] <- c("Código","Curso","Campus","Alunos Ativos","Vaga 1 Sem","Vaga 2 Sem","Área","Duração Padrão","Fator de Retenção","Vagas Ociosas")
#Criando DF para manipulação, deixando o original como Backup
data.edit1 <- vagasOciosasPorCurso
#Excluindo colunas inúteis e Convertendo strings para numéricos
data.edit1$Código <- NULL
data.edit1$`Duração Padrão` <- NULL
data.edit1$Área <- NULL
data.edit1$`Fator de Retenção` <- NULL
data.edit1$`Alunos Ativos` <- as.numeric(levels(data.edit1$`Alunos Ativos`))[data.edit1$`Alunos Ativos`]
data.edit1$`Vaga 1 Sem` <- as.numeric(data.edit1$`Vaga 1 Sem`)
data.edit1$`Vaga 2 Sem` <- as.numeric(data.edit1$`Vaga 2 Sem`)
data.edit1$`Vagas Ociosas` <- as.numeric(data.edit1$`Vagas Ociosas`)
#Fundindo Linhas:
data.edit2 <- data.edit1[c(-1,-47,-95,-2),] #excluindo linhas vazias
data.edit2$Campus <- as.factor(data.edit2$Campus)
separate(data.edit2, Curso, sep = "-", into = c("Curso", "Turno")) #não funciona, pesquisar dps
class(data.edit2$Curso)
data.test <- data.edit2
data.test$Turno <- str_extract(data.test$Curso, "\\- [:upper:]") #extrair de turnos e salvar em cursos "- (letramaius)"
data.test$Turno <- str_sub(data.test$Curso, start = -1) #Pegar apenas o último caractere
data.test$Curso <- str_sub(data.test$Curso, end = -4 ) #Pegar apenas do quarto caractere pra tras
data.test$Turno <- as.factor(data.test$Turno)
data.test$Curso <- as.character(data.test$Curso)
vagasOciosasPorCurso <- read.csv(file = 'vagasOciosasPorCurso.csv')
View(vagasOciosasPorCurso)
str(vagasOciosasPorCurso)
#Correção dos Títulos das Colunas:
names(vagasOciosasPorCurso)[1:10] <- c("Código","Curso","Campus","Alunos Ativos","Vaga 1 Sem","Vaga 2 Sem","Área","Duração Padrão","Fator de Retenção","Vagas Ociosas")
#Criando DF para manipulação, deixando o original como Backup
data.edit1 <- vagasOciosasPorCurso
#Excluindo colunas inúteis e Convertendo strings para numéricos
data.edit1$Código <- NULL
data.edit1$`Duração Padrão` <- NULL
data.edit1$Área <- NULL
data.edit1$`Fator de Retenção` <- NULL
data.edit1$`Alunos Ativos` <- as.numeric(levels(data.edit1$`Alunos Ativos`))[data.edit1$`Alunos Ativos`]
data.edit1$`Vaga 1 Sem` <- as.numeric(data.edit1$`Vaga 1 Sem`)
data.edit1$`Vaga 2 Sem` <- as.numeric(data.edit1$`Vaga 2 Sem`)
data.edit1$`Vagas Ociosas` <- as.numeric(data.edit1$`Vagas Ociosas`)
#Fundindo Linhas:
data.edit2 <- data.edit1[c(-1,-47,-95,-2),] #excluindo linhas vazias
data.edit2$Campus <- as.factor(data.edit2$Campus)
separate(data.edit2, Curso, sep = "-", into = c("Curso", "Turno")) #não funciona, pesquisar dps
class(data.edit2$Curso)
data.test <- data.edit2
data.test$Turno <- str_extract(data.test$Curso, "\\- [:upper:]") #extrair de turnos e salvar em cursos "- (letramaius)"
data.test$Turno <- str_sub(data.test$Curso, start = -1) #Pegar apenas o último caractere
data.test$Curso <- str_sub(data.test$Curso, end = -4 ) #Pegar apenas do quarto caractere pra tras
data.test$Turno <- as.factor(data.test$Turno)
data.test$Curso <- as.character(data.test$Curso)
#Tratando Strings:
levels(data.test$Turno)
curso <- data.test$Curso #criando vetores com as colunas
curso
print(curso)
#curso <- str_replace(curso, "[-]", "")
curso <- str_replace(curso, "[M]$", "")
curso <- str_replace(curso, "[N]$", "")
curso <- str_replace(curso, "[D]$", "")
curso <- str_replace(curso, "[V]$", "")
curso <- str_split(curso, fixed(' - '))
View(curso)
curso <- data.test$Curso #criando vetores com as colunas
View(curso)
curso <- data.test$Curso #criando vetores com as colunas
vagasOciosasPorCurso <- read.csv(file = 'vagasOciosasPorCurso.csv')
View(vagasOciosasPorCurso)
str(vagasOciosasPorCurso)
#Correção dos Títulos das Colunas:
names(vagasOciosasPorCurso)[1:10] <- c("Código","Curso","Campus","Alunos Ativos","Vaga 1 Sem","Vaga 2 Sem","Área","Duração Padrão","Fator de Retenção","Vagas Ociosas")
#Criando DF para manipulação, deixando o original como Backup
data.edit1 <- vagasOciosasPorCurso
#Excluindo colunas inúteis e Convertendo strings para numéricos
data.edit1$Código <- NULL
data.edit1$`Duração Padrão` <- NULL
data.edit1$Área <- NULL
data.edit1$`Fator de Retenção` <- NULL
data.edit1$`Alunos Ativos` <- as.numeric(levels(data.edit1$`Alunos Ativos`))[data.edit1$`Alunos Ativos`]
data.edit1$`Vaga 1 Sem` <- as.numeric(data.edit1$`Vaga 1 Sem`)
data.edit1$`Vaga 2 Sem` <- as.numeric(data.edit1$`Vaga 2 Sem`)
data.edit1$`Vagas Ociosas` <- as.numeric(data.edit1$`Vagas Ociosas`)
#Fundindo Linhas:
data.edit2 <- data.edit1[c(-1,-47,-95,-2),] #excluindo linhas vazias
data.edit2$Campus <- as.factor(data.edit2$Campus)
separate(data.edit2, Curso, sep = "-", into = c("Curso", "Turno")) #não funciona, pesquisar dps
class(data.edit2$Curso)
data.test <- data.edit2
data.test$Turno <- str_extract(data.test$Curso, "\\- [:upper:]") #extrair de turnos e salvar em cursos "- (letramaius)"
data.test$Turno <- str_sub(data.test$Curso, start = -1) #Pegar apenas o último caractere
data.test$Curso <- str_sub(data.test$Curso, end = -4 ) #Pegar apenas do quarto caractere pra tras
data.test$Turno <- as.factor(data.test$Turno)
data.test$Curso <- as.character(data.test$Curso)
#Tratando Strings:
levels(data.test$Turno)
curso <- data.test$Curso #criando vetores com as colunas
View(curso)
vagasOciosasPorCurso <- read.csv(file = 'vagasOciosasPorCurso.csv')
vagasOciosasPorCurso <- read.csv(file = 'vagasOciosasPorCurso.csv')
>>>>>>> c47938c144a636a06ab72d032b8e502f3676db19
vagasOciosasPorCurso <- read.csv(file = 'vagasOciosasPorCurso.csv')
#Correção dos Títulos das Colunas:
names(vagasOciosasPorCurso)[1:10] <- c("Código","Curso","Campus","Alunos Ativos","Vaga 1 Sem","Vaga 2 Sem","Área","Duração Padrão","Fator de Retenção","Vagas Ociosas")
#Criando DF para manipulação, deixando o original como Backup
data.edit1 <- vagasOciosasPorCurso
#Excluindo colunas inúteis e Convertendo strings para numéricos
data.edit1$Código <- NULL
data.edit1$`Duração Padrão` <- NULL
data.edit1$Área <- NULL
data.edit1$`Fator de Retenção` <- NULL
data.edit1$`Alunos Ativos` <- as.numeric(levels(data.edit1$`Alunos Ativos`))[data.edit1$`Alunos Ativos`]
data.edit1$`Vaga 1 Sem` <- as.numeric(levels(data.edit1$`Vaga 1 Sem`))[data.edit1$`Vaga 1 Sem`]
data.edit1$`Vaga 2 Sem` <- as.numeric(levels(data.edit1$`Vaga 2 Sem`))[data.edit1$`Vaga 2 Sem`]
data.edit1$`Vagas Ociosas` <- as.numeric(levels(data.edit1$`Vagas Ociosas`))[data.edit1$`Vagas Ociosas`]
#Fundindo Linhas
data.edit1 <- data.edit1[c(-1,-47,-95,-2),] #excluindo linhas vazias
#Transformando Campus em fatos
data.edit1$Campus <- as.factor(data.edit1$Campus)
data.test1 <- data.edit1
data.test1$Turno <- str_extract(data.test1$Curso, "\\- [:upper:]") #extrair de turnos e salvar em cursos "- (letramaius)"
data.test1$Turno <- str_sub(data.test1$Curso, start = -1) #Pegar apenas o último caractere
data.test1$Turno <- as.factor(data.test1$Turno)
data.test1$Curso <- as.character(data.test1$Curso)
data.test1 <- arrange(data.test1, `Curso`, `Campus`)
data.test1$Curso <- str_replace_all(data.test1$Curso, "[-]", "")
data.test1$Curso <- str_replace(data.test1$Curso, "[M]$", "")
data.test1$Curso <- str_replace(data.test1$Curso, "[N]$", "")
data.test1$Curso <- str_replace(data.test1$Curso, "[D]$", "")
data.test1$Curso <- str_replace(data.test1$Curso, "[V]$", "")
data.test1$Turno <- as.character(data.test1$Turno)
data.test1[76,7]  <- "D"
data.test1[79:80,7]  <- "I"
data.test1[41,7]  <- "I"
#data.test1$Curso <- as.character(data.test1$Curso) #foi necessário transformar em character antes de passar para factor
data.test1$Curso <- as.factor(data.test1$Curso)
#agrupando linhas de mesmo nome
#primeiro dividir em dataframes menores e então juntá-los
data.test2 <- data.test1
total_vagas1 <- data.test2 %>% #Criando primeiro fragmento (total de vagas 1)
group_by(Curso) %>%
summarise(Total_Vagas1 = sum(`Vaga 1 Sem`)) #Digitar sum(data.test2$'Vaga 1 Sem)
total_vagas1 <- as.data.frame(total_vagas1)
total_vagas2 <- data.test2 %>% #criando segundo fragmento (total vagas 2)
group_by(Curso) %>%
summarise(Total_Vagas2 = sum(`Vaga 2 Sem`))
total_vagas2 <- as.data.frame(total_vagas2)
alunos_ativos <- data.test2 %>% #criando 3º fragmento (Alunos Ativos)
group_by(Curso) %>%
summarise(Alunos_Ativos = sum(`Alunos Ativos`))
alunos_ativos <- as.data.frame(alunos_ativos)
vagas_ociosas <- data.test2 %>% #Criando 4º fragmento (Vagas Ociosas)
group_by(Curso) %>%
summarise(Vagas_Ociosas = sum(`Vagas Ociosas`))
vagas_ociosas <- as.data.frame(vagas_ociosas)
#Finalmente, juntando os fragmentos na construção da tabela Final.Separado
Final.Separado <- inner_join(total_vagas1, total_vagas2, by = "Curso")
Final.Separado <- inner_join(Final.Separado, vagas_ociosas, by = "Curso")
Final.Separado <- inner_join(Final.Separado, alunos_ativos, by = "Curso")
#Criando agrupamentos por curso
total_vagas <- data.test2 %>% #Criando primeiro fragmento (total de vagas 1 e total vagas 2)
group_by(Curso) %>%
summarise(Total_Vagas = sum(`Vaga 1 Sem`, `Vaga 2 Sem`))
total_vagas <- as.data.frame(total_vagas)
#Finalmente, juntando os fragmentos na construção da tabela Final.Total
Final.Total <- inner_join(total_vagas, vagas_ociosas , by = "Curso")
Final.Total <- inner_join(Final.Total, alunos_ativos, by = "Curso")
View(Final.Total)
View(Final.Separado)
vagasOciosasPorCurso <- read.csv(file = 'vagasOciosasPorCurso.csv')
#Correção dos Títulos das Colunas:
names(vagasOciosasPorCurso)[1:10] <- c("Código","Curso","Campus","Alunos Ativos","Vaga 1 Sem","Vaga 2 Sem","Área","Duração Padrão","Fator de Retenção","Vagas Ociosas")
#Criando DF para manipulação, deixando o original como Backup
data.edit1 <- vagasOciosasPorCurso
#Excluindo colunas inúteis e Convertendo strings para numéricos
data.edit1$Código <- NULL
data.edit1$`Duração Padrão` <- NULL
data.edit1$Área <- NULL
data.edit1$`Fator de Retenção` <- NULL
data.edit1$`Alunos Ativos` <- as.numeric(levels(data.edit1$`Alunos Ativos`))[data.edit1$`Alunos Ativos`]
data.edit1$`Vaga 1 Sem` <- as.numeric(levels(data.edit1$`Vaga 1 Sem`))[data.edit1$`Vaga 1 Sem`]
data.edit1$`Vaga 2 Sem` <- as.numeric(levels(data.edit1$`Vaga 2 Sem`))[data.edit1$`Vaga 2 Sem`]
data.edit1$`Vagas Ociosas` <- as.numeric(levels(data.edit1$`Vagas Ociosas`))[data.edit1$`Vagas Ociosas`]
#Fundindo Linhas
data.edit1 <- data.edit1[c(-1,-47,-95,-2),] #excluindo linhas vazias
#Transformando Campus em fatos
data.edit1$Campus <- as.factor(data.edit1$Campus)
data.edit1 <- data.edit1
data.edit1$Turno <- str_extract(data.edit1$Curso, "\\- [:upper:]") #extrair de turnos e salvar em cursos "- (letramaius)"
data.edit1$Turno <- str_sub(data.edit1$Curso, start = -1) #Pegar apenas o último caractere
data.edit1$Turno <- as.factor(data.edit1$Turno)
data.edit1$Curso <- as.character(data.edit1$Curso)
data.edit1 <- arrange(data.edit1, `Curso`, `Campus`)
data.edit1$Curso <- str_replace_all(data.edit1$Curso, "[-]", "")
data.edit1$Curso <- str_replace(data.edit1$Curso, "[M]$", "")
data.edit1$Curso <- str_replace(data.edit1$Curso, "[N]$", "")
data.edit1$Curso <- str_replace(data.edit1$Curso, "[D]$", "")
data.edit1$Curso <- str_replace(data.edit1$Curso, "[V]$", "")
data.edit1$Turno <- as.character(data.edit1$Turno)
data.edit1[76,7]  <- "D"
data.edit1[79:80,7]  <- "I"
data.edit1[41,7]  <- "I"
#data.edit1$Curso <- as.character(data.edit1$Curso) #foi necessário transformar em character antes de passar para factor
data.edit1$Curso <- as.factor(data.edit1$Curso)
#agrupando linhas de mesmo nome
#primeiro dividir em dataframes menores e então juntá-los
data.edit1 <- data.edit1
total_vagas1 <- data.edit1 %>% #Criando primeiro fragmento (total de vagas 1)
group_by(Curso) %>%
summarise(Total_Vagas1 = sum(`Vaga 1 Sem`)) #Digitar sum(data.edit1$'Vaga 1 Sem)
total_vagas1 <- as.data.frame(total_vagas1)
total_vagas2 <- data.edit1 %>% #criando segundo fragmento (total vagas 2)
group_by(Curso) %>%
summarise(Total_Vagas2 = sum(`Vaga 2 Sem`))
total_vagas2 <- as.data.frame(total_vagas2)
alunos_ativos <- data.edit1 %>% #criando 3º fragmento (Alunos Ativos)
group_by(Curso) %>%
summarise(Alunos_Ativos = sum(`Alunos Ativos`))
alunos_ativos <- as.data.frame(alunos_ativos)
vagas_ociosas <- data.edit1 %>% #Criando 4º fragmento (Vagas Ociosas)
group_by(Curso) %>%
summarise(Vagas_Ociosas = sum(`Vagas Ociosas`))
vagas_ociosas <- as.data.frame(vagas_ociosas)
#Finalmente, juntando os fragmentos na construção da tabela Final.Separado
Final.Separado <- inner_join(total_vagas1, total_vagas2, by = "Curso")
Final.Separado <- inner_join(Final.Separado, vagas_ociosas, by = "Curso")
Final.Separado <- inner_join(Final.Separado, alunos_ativos, by = "Curso")
#Criando agrupamentos por curso
total_vagas <- data.edit1 %>% #Criando primeiro fragmento (total de vagas 1 e total vagas 2)
group_by(Curso) %>%
summarise(Total_Vagas = sum(`Vaga 1 Sem`, `Vaga 2 Sem`))
total_vagas <- as.data.frame(total_vagas)
#Finalmente, juntando os fragmentos na construção da tabela Final.Total
Final.Total <- inner_join(total_vagas, vagas_ociosas , by = "Curso")
Final.Total <- inner_join(Final.Total, alunos_ativos, by = "Curso")
#Plotando Gráficos FINAL:
Curso <- Final.Total$Curso
Curso <- as.character(Curso)
names(Final.Total)[2:4] <- c("Total Vagas","Vagas Ociosas","Alunos Ativos")
Curso
########################
ggplot(data = Final.Total,
mapping = aes(x = `Total Vagas`,
y = reorder(Curso, -`Total Vagas`))) +
geom_col() +
xlab("Vagas") +
ylab("Curso") +
ggtitle("Vagas Disponíveis Anualmente Para Ingressantes por Curso - UFCG")
########################
ggplot(data = Final.Total,
mapping = aes(x = `Total Vagas`,
y = reorder(`Curso`, -`Total Vagas`))) +
geom_col() +
xlab("Vagas") +
ylab("Curso") +
ggtitle("Vagas Disponíveis Anualmente Para Ingressantes por Curso - UFCG")
########################
ggplot(data = Final.Total,
mapping = aes(x = `Total Vagas`,
y = reorder(`Curso`, -`Total Vagas`))) +
geom_col() +
xlab("Vagas") +
ylab("Curso") +
ggtitle("Vagas Disponíveis Anualmente Para Ingressantes por Curso - UFCG")
########################
ggplot(data = Final.Total,
mapping = aes(x = `Total Vagas`,
y = reorder(Curso, -`Total Vagas`))) +
geom_col() +
xlab("Vagas") +
ylab("Curso") +
ggtitle("Vagas Disponíveis Anualmente Para Ingressantes por Curso - UFCG")
##########################
ggplot(data = Final.Total,
mapping = aes(x = `Vagas Ociosas`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#08b5ff", mapping = aes(x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`)), stat = "identity") +
geom_bar(fill = "#00628c", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################
ggplot(fill = "#08b5ff", data = Final.Total,
mapping = aes(fill= `Vagas Ociosas`, x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_bar(fill = "#00628c", position="stack", stat = "identity") +
xlab("Vagas Ociosas / Alunos Ativos") +
ylab("Curso") +
ggtitle("Cursos - UFCG")
##########################
ggplot(data = Final.Total,
mapping = aes(x = `Alunos Ativos`,
y = reorder(Curso, -`Alunos Ativos`))) +
geom_col() +
xlab("Alunos Ativos") +
ylab("Curso") +
ggtitle("Alunos Ativos por Curso - UFCG")
###########################
ggplot(data = Final.Total,
mapping = aes(x = `Vagas Ociosas`,
y = reorder(Curso, -`Vagas Ociosas`))) +
geom_col() +
xlab("Vagas Ociosas") +
ylab("Curso") +
ggtitle("Vagas Ociosas por Curso - UFCG")
#Criando agrupamentos por Turno
Turnos <- data.edit1
total_vagas <- Turnos %>%
group_by(Turno) %>%
summarise(`Vagas Totais` = sum(`Vaga 1 Sem`, `Vaga 2 Sem`))
total_vagas <- as.data.frame(total_vagas)
alunos_ativos <- Turnos %>%
group_by(Turno) %>%
summarise(`Alunos Ativos` = sum(`Alunos Ativos`))
alunos_ativos <- as.data.frame(alunos_ativos)
######################
ggplot(data = Final.Total,
mapping = aes(x = `Total Vagas`,
y = `Vagas Ociosas`,
size = `Alunos Ativos`,
colour = Curso)) +
scale_size_continuous(range = c(1,15)) +
xlab("Vagas de Ingressantes(1º e 2º Semestre)") +
ylab("Vagas Ociosas") +
geom_point()
View(alunos_ativos)
vagasOciosasPorCurso <- read.csv(file = 'vagasOciosasPorCurso.csv')
#Correção dos Títulos das Colunas:
names(vagasOciosasPorCurso)[1:10] <- c("Código","Curso","Campus","Alunos Ativos","Vaga 1 Sem","Vaga 2 Sem","Área","Duração Padrão","Fator de Retenção","Vagas Ociosas")
#Criando DF para manipulação, deixando o original como Backup
data.edit1 <- vagasOciosasPorCurso
#Excluindo colunas inúteis e Convertendo strings para numéricos
data.edit1$Código <- NULL
data.edit1$`Duração Padrão` <- NULL
data.edit1$Área <- NULL
data.edit1$`Fator de Retenção` <- NULL
data.edit1$`Alunos Ativos` <- as.numeric(levels(data.edit1$`Alunos Ativos`))[data.edit1$`Alunos Ativos`]
data.edit1$`Vaga 1 Sem` <- as.numeric(levels(data.edit1$`Vaga 1 Sem`))[data.edit1$`Vaga 1 Sem`]
data.edit1$`Vaga 2 Sem` <- as.numeric(levels(data.edit1$`Vaga 2 Sem`))[data.edit1$`Vaga 2 Sem`]
data.edit1$`Vagas Ociosas` <- as.numeric(levels(data.edit1$`Vagas Ociosas`))[data.edit1$`Vagas Ociosas`]
#Fundindo Linhas
data.edit1 <- data.edit1[c(-1,-47,-95,-2),] #excluindo linhas vazias
#Transformando Campus em fatos
data.edit1$Campus <- as.factor(data.edit1$Campus)
data.edit1 <- data.edit1
data.edit1$Turno <- str_extract(data.edit1$Curso, "\\- [:upper:]") #extrair de turnos e salvar em cursos "- (letramaius)"
data.edit1$Turno <- str_sub(data.edit1$Curso, start = -1) #Pegar apenas o último caractere
data.edit1$Turno <- as.factor(data.edit1$Turno)
data.edit1$Curso <- as.character(data.edit1$Curso)
data.edit1 <- arrange(data.edit1, `Curso`, `Campus`)
data.edit1$Curso <- str_replace_all(data.edit1$Curso, "[-]", "")
data.edit1$Curso <- str_replace(data.edit1$Curso, "[M]$", "")
data.edit1$Curso <- str_replace(data.edit1$Curso, "[N]$", "")
data.edit1$Curso <- str_replace(data.edit1$Curso, "[D]$", "")
data.edit1$Curso <- str_replace(data.edit1$Curso, "[V]$", "")
data.edit1$Turno <- as.character(data.edit1$Turno)
data.edit1[76,7]  <- "D"
data.edit1[79:80,7]  <- "I"
data.edit1[41,7]  <- "I"
#data.edit1$Curso <- as.character(data.edit1$Curso) #foi necessário transformar em character antes de passar para factor
data.edit1$Curso <- as.factor(data.edit1$Curso)
#agrupando linhas de mesmo nome
#primeiro dividir em dataframes menores e então juntá-los
data.edit1 <- data.edit1
total_vagas1 <- data.edit1 %>% #Criando primeiro fragmento (total de vagas 1)
group_by(Curso) %>%
summarise(Total_Vagas1 = sum(`Vaga 1 Sem`)) #Digitar sum(data.edit1$'Vaga 1 Sem)
total_vagas1 <- as.data.frame(total_vagas1)
total_vagas2 <- data.edit1 %>% #criando segundo fragmento (total vagas 2)
group_by(Curso) %>%
summarise(Total_Vagas2 = sum(`Vaga 2 Sem`))
total_vagas2 <- as.data.frame(total_vagas2)
alunos_ativos <- data.edit1 %>% #criando 3º fragmento (Alunos Ativos)
group_by(Curso) %>%
summarise(Alunos_Ativos = sum(`Alunos Ativos`))
alunos_ativos <- as.data.frame(alunos_ativos)
vagas_ociosas <- data.edit1 %>% #Criando 4º fragmento (Vagas Ociosas)
group_by(Curso) %>%
summarise(Vagas_Ociosas = sum(`Vagas Ociosas`))
vagas_ociosas <- as.data.frame(vagas_ociosas)
<<<<<<< HEAD
#Finalmente, juntando os fragmentos na construção da tabela Final.Separado
Final.Separado <- inner_join(total_vagas1, total_vagas2, by = "Curso")
Final.Separado <- inner_join(Final.Separado, vagas_ociosas, by = "Curso")
Final.Separado <- inner_join(Final.Separado, alunos_ativos, by = "Curso")
View(Final.Separado)
names(Final.Separado)[2:5] <- c("Vagas 1º Sem","Vagas 2º Sem","Vagas Ociosas","Alunos Ativos")
=======
View(total_vagas2)
View(vagas_ociosas)
View(vagasOciosasPorCurso)
#Finalmente, juntando os fragmentos na construção da tabela final
Final <- inner_join(total_vagas1, total_vagas2, by = "Curso")
View(Final)
Final <- inner_join(Final, vagas_ociosas, by = "Curso")
Final <- inner_join(Final, alunos_ativos, by = "Curso")
Turnos$Turno
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(purrr)
View(Final)
data.edit1$`Vaga 1 Sem` <- as.numeric(data.edit1$`Vaga 1 Sem`)
View(data.edit1)
#Criando DF para manipulação, deixando o original como Backup
data.edit1 <- vagasOciosasPorCurso
#Excluindo colunas inúteis e Convertendo strings para numéricos
data.edit1$Código <- NULL
data.edit1$`Duração Padrão` <- NULL
data.edit1$Área <- NULL
data.edit1$`Fator de Retenção` <- NULL
data.edit1$`Alunos Ativos` <- as.numeric(data.edit1$`Alunos Ativos`)
data.edit1$`Vaga 1 Sem` <- as.numeric(data.edit1$`Vaga 1 Sem`)
View(Final)
View(vagasOciosasPorCurso)
#Correção dos Títulos das Colunas:
names(vagasOciosasPorCurso)[1:10] <- c("Código","Curso","Campus","Alunos Ativos","Vaga 1 Sem","Vaga 2 Sem","Área","Duração Padrão","Fator de Retenção","Vagas Ociosas")
View(vagasOciosasPorCurso)
str(vagasOciosasPorCurso)
#Correção dos Títulos das Colunas:
names(vagasOciosasPorCurso)[1:10] <- c("Código","Curso","Campus","Alunos Ativos","Vaga 1 Sem","Vaga 2 Sem","Área","Duração Padrão","Fator de Retenção","Vagas Ociosas")
#Criando DF para manipulação, deixando o original como Backup
data.edit1 <- vagasOciosasPorCurso
#Excluindo colunas inúteis e Convertendo strings para numéricos
data.edit1$Código <- NULL
data.edit1$`Duração Padrão` <- NULL
data.edit1$Área <- NULL
data.edit1$`Fator de Retenção` <- NULL
View(vagasOciosasPorCurso)
data.edit1$`Alunos Ativos` <- as.numeric(data.edit1$`Alunos Ativos`)
#Criando DF para manipulação, deixando o original como Backup
data.edit1 <- vagasOciosasPorCurso
#Excluindo colunas inúteis e Convertendo strings para numéricos
data.edit1$Código <- NULL
data.edit1$`Duração Padrão` <- NULL
data.edit1$Área <- NULL
data.edit1$`Fator de Retenção` <- NULL
data.edit1$`Alunos Ativos` <- as.numeric(data.edit1$`Alunos Ativos`)
View(vagasOciosasPorCurso)
str(vagasOciosasPorCurso)
vagasOciosasPorCurso <- read.csv("~/Área de Trabalho/Dados UFCG/vagasOciosasPorCurso.csv")
View(vagasOciosasPorCurso)
View(vagasOciosasPorCurso)
str(vagasOciosasPorCurso)
#Correção dos Títulos das Colunas:
names(vagasOciosasPorCurso)[1:10] <- c("Código","Curso","Campus","Alunos Ativos","Vaga 1 Sem","Vaga 2 Sem","Área","Duração Padrão","Fator de Retenção","Vagas Ociosas")
#Criando DF para manipulação, deixando o original como Backup
data.edit1 <- vagasOciosasPorCurso
View(data.edit1)
#Excluindo colunas inúteis e Convertendo strings para numéricos
data.edit1$Código <- NULL
data.edit1$`Duração Padrão` <- NULL
data.edit1$Área <- NULL
data.edit1$`Fator de Retenção` <- NULL
data.edit1$`Alunos Ativos` <- as.numeric(data.edit1$`Alunos Ativos`)
>>>>>>> c47938c144a636a06ab72d032b8e502f3676db19
